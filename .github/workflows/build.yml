name: Build cpprestsdk

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  # Windows builds
  windows-x64:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'HEAD'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Install dependencies
      run: |
        .\vcpkg\vcpkg.exe install zlib openssl boost-locale boost-system boost-date-time boost-regex websocketpp boost-thread boost-filesystem boost-random boost-chrono boost-interprocess brotli --triplet x64-windows
    
    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCPPREST_EXCLUDE_BROTLI=OFF -A x64
    
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
    
    - name: Test
      working-directory: build/Release/Binaries/${{ matrix.build_type }}
      run: |
        if ("${{ matrix.build_type }}" -eq "Debug") {
          .\test_runner.exe *testd.dll
        } else {
          .\test_runner.exe *test.dll
        }

  windows-arm64:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'HEAD'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Install dependencies
      run: |
        .\vcpkg\vcpkg.exe install zlib openssl boost-locale boost-system boost-date-time boost-regex websocketpp boost-thread boost-filesystem boost-random boost-chrono boost-interprocess brotli --triplet arm64-windows
    
    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCPPREST_EXCLUDE_BROTLI=OFF -A ARM64
    
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

  # Linux builds
  linux-x64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build g++ pkg-config
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'HEAD'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Install dependencies
      run: |
        ./vcpkg/vcpkg install zlib openssl boost-locale boost-system boost-date-time boost-regex websocketpp boost-thread boost-filesystem boost-random boost-chrono boost-interprocess brotli --triplet x64-linux
    
    - name: Configure CMake
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCPPREST_EXCLUDE_BROTLI=OFF
    
    - name: Build
      run: cmake --build build
    
    - name: Test
      working-directory: build/Release/Binaries
      run: ./test_runner *test.so

  linux-arm64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build gcc-aarch64-linux-gnu g++-aarch64-linux-gnu pkg-config
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'HEAD'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Install dependencies
      run: |
        ./vcpkg/vcpkg install zlib openssl boost-locale boost-system boost-date-time boost-regex websocketpp boost-thread boost-filesystem boost-random boost-chrono boost-interprocess brotli --triplet arm64-linux
    
    - name: Configure CMake
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCPPREST_EXCLUDE_BROTLI=OFF -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
    
    - name: Build
      run: cmake --build build

  # Android builds
  android-x64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        add-to-path: false
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build pkg-config
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'HEAD'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Install dependencies
      run: |
        ./vcpkg/vcpkg install zlib openssl boost-locale boost-system boost-date-time boost-regex websocketpp boost-thread boost-filesystem boost-random boost-chrono boost-interprocess --triplet x64-android
    
    - name: Configure CMake
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=${{ env.ANDROID_NDK_ROOT }}/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86_64 -DANDROID_PLATFORM=android-21 -DCPPREST_EXCLUDE_BROTLI=ON -DBUILD_TESTS=OFF -DBUILD_SAMPLES=OFF
      env:
        ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
    
    - name: Build
      run: cmake --build build

  android-arm64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        add-to-path: false
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build pkg-config
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: 'HEAD'
        vcpkgJsonGlob: '**/vcpkg.json'
    
    - name: Install dependencies
      run: |
        ./vcpkg/vcpkg install zlib openssl boost-locale boost-system boost-date-time boost-regex websocketpp boost-thread boost-filesystem boost-random boost-chrono boost-interprocess --triplet arm64-android
    
    - name: Configure CMake
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=${{ env.ANDROID_NDK_ROOT }}/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-21 -DCPPREST_EXCLUDE_BROTLI=ON -DBUILD_TESTS=OFF -DBUILD_SAMPLES=OFF
      env:
        ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
    
    - name: Build
      run: cmake --build build